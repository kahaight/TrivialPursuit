@model TrivialPursuit.Models.GameBaseModels.GameEditModel

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <br/>
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.GameBaseId)
        @Html.HiddenFor(model => model.QuestionId)

        <div>@Html.Partial("_PiePartial")</div>
        @if (TempData.ContainsKey("Correct"))
        {
            <div class="alert alert-success fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert">
                    <span>&times;</span>
                </button>
                @TempData["Correct"]
            </div>
        }
        @if (TempData.ContainsKey("Incorrect"))
        {
            <div class="alert alert-success fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert">
                    <span>&times;</span>
                </button>
                @TempData["Incorrect"]
            </div>
        }
        @if (Model.GameVersionId == null)
        {

            <div class="form-group">
                @Html.LabelFor(model => model.GameVersion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("GameVersion", (SelectList)ViewBag.VersionName, " ")
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NumberOfPlayers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumberOfPlayers, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumberOfPlayers, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (Model.GameVersionId != null)
        {
            <h2>Turn: Player @Model.PlayerTurn</h2>
            @Html.HiddenFor(model => model.GameVersionId)
            @Html.HiddenFor(model => model.CategoryColor)
            @Html.HiddenFor(model => model.NumberOfPlayers)
            @Html.HiddenFor(model=> model.PlayerTurn)

            <div class="form-group">
                @Html.LabelFor(model => model.Question.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @(Model.Question.Category.Name)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @(Model.Question.Text)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
